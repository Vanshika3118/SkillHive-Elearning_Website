{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-countdown/fesm2022/ngx-countdown.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable, InjectionToken, makeEnvironmentProviders, LOCALE_ID, ChangeDetectorRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport { formatDate, NgTemplateOutlet } from '@angular/common';\nconst _c0 = a0 => ({\n  $implicit: a0\n});\nfunction CountdownComponent_Conditional_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction CountdownComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CountdownComponent_Conditional_0_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.render)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.i));\n  }\n}\nfunction CountdownComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.i.text, i0.ɵɵsanitizeHtml);\n  }\n}\nvar CountdownStatus;\n(function (CountdownStatus) {\n  CountdownStatus[CountdownStatus[\"ing\"] = 0] = \"ing\";\n  CountdownStatus[CountdownStatus[\"pause\"] = 1] = \"pause\";\n  CountdownStatus[CountdownStatus[\"stop\"] = 2] = \"stop\";\n  CountdownStatus[CountdownStatus[\"done\"] = 3] = \"done\";\n})(CountdownStatus || (CountdownStatus = {}));\nclass CountdownTimer {\n  constructor() {\n    this.ngZone = inject(NgZone);\n    this.fns = [];\n    this.commands = [];\n    this.nextTime = 0;\n    this.ing = false;\n  }\n  start() {\n    if (this.ing === true) {\n      return;\n    }\n    this.ing = true;\n    this.nextTime = +new Date();\n    this.ngZone.runOutsideAngular(() => {\n      this.process();\n    });\n  }\n  process() {\n    while (this.commands.length) {\n      this.commands.shift()();\n    }\n    let diff = +new Date() - this.nextTime;\n    const count = 1 + Math.floor(diff / 100);\n    diff = 100 - diff % 100;\n    this.nextTime += 100 * count;\n    for (let i = 0, len = this.fns.length; i < len; i += 2) {\n      let frequency = this.fns[i + 1];\n      // 100/s\n      if (0 === frequency) {\n        this.fns[i](count);\n        // 1000/s\n      } else {\n        // 先把末位至0，再每次加2\n        frequency += 2 * count - 1;\n        const step = Math.floor(frequency / 20);\n        if (step > 0) {\n          this.fns[i](step);\n        }\n        // 把末位还原成1\n        this.fns[i + 1] = frequency % 20 + 1;\n      }\n    }\n    if (!this.ing) {\n      return;\n    }\n    setTimeout(() => this.process(), diff);\n  }\n  add(fn, frequency) {\n    this.commands.push(() => {\n      this.fns.push(fn);\n      this.fns.push(frequency === 1000 ? 1 : 0);\n      this.ing = true;\n    });\n    return this;\n  }\n  remove(fn) {\n    this.commands.push(() => {\n      const i = this.fns.indexOf(fn);\n      if (i !== -1) {\n        this.fns.splice(i, 2);\n      }\n      this.ing = this.fns.length > 0;\n    });\n    return this;\n  }\n  static {\n    this.ɵfac = function CountdownTimer_Factory(t) {\n      return new (t || CountdownTimer)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CountdownTimer,\n      factory: CountdownTimer.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownTimer, [{\n    type: Injectable\n  }], null, null);\n})();\nconst COUNTDOWN_CONFIG = new InjectionToken('COUNTDOWN_CONFIG');\nfunction provideCountdown(config) {\n  return makeEnvironmentProviders([{\n    provide: COUNTDOWN_CONFIG,\n    useValue: config\n  }]);\n}\nclass CountdownComponent {\n  constructor() {\n    this.locale = inject(LOCALE_ID);\n    this.timer = inject(CountdownTimer);\n    this.cdr = inject(ChangeDetectorRef);\n    this.ngZone = inject(NgZone);\n    this.defCog = inject(COUNTDOWN_CONFIG, {\n      optional: true\n    });\n    this.frequency = 1000;\n    this._notify = {};\n    this.status = CountdownStatus.ing;\n    this.isDestroy = false;\n    this.i = {};\n    this.left = 0;\n    this.event = new EventEmitter();\n  }\n  set config(i) {\n    if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\n      i.notify = [i.notify];\n    }\n    this._config = i;\n  }\n  get config() {\n    return this._config;\n  }\n  /**\n   * Start countdown, you must manually call when `demand: false`\n   */\n  begin() {\n    this.status = CountdownStatus.ing;\n    this.callEvent('start');\n  }\n  /**\n   * Restart countdown\n   */\n  restart() {\n    if (this.status !== CountdownStatus.stop) {\n      this.destroy();\n    }\n    this.init();\n    this.callEvent('restart');\n  }\n  /**\n   * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n   */\n  stop() {\n    if (this.status === CountdownStatus.stop) {\n      return;\n    }\n    this.status = CountdownStatus.stop;\n    this.destroy();\n    this.callEvent('stop');\n  }\n  /**\n   * Pause countdown, you can use `resume` to recover again\n   */\n  pause() {\n    if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.pause;\n    this.callEvent('pause');\n  }\n  /**\n   * Resume countdown\n   */\n  resume() {\n    if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.ing;\n    this.callEvent('resume');\n  }\n  callEvent(action) {\n    this.event.emit({\n      action,\n      left: this.left,\n      status: this.status,\n      text: this.i.text\n    });\n  }\n  init() {\n    const config = this.config = {\n      demand: false,\n      leftTime: 0,\n      format: 'HH:mm:ss',\n      timezone: '+0000',\n      formatDate: ({\n        date,\n        formatStr,\n        timezone\n      }) => {\n        return formatDate(new Date(date), formatStr, this.locale, timezone || '+0000');\n      },\n      ...this.defCog,\n      ...this.config\n    };\n    const frq = this.frequency = ~config.format.indexOf('S') ? 100 : 1000;\n    this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n    this.getLeft();\n    // bind reflow to me\n    const _reflow = this.reflow;\n    this.reflow = (count = 0, force = false) => _reflow.apply(this, [count, force]);\n    if (Array.isArray(config.notify)) {\n      config.notify.forEach(time => {\n        if (time < 1) {\n          throw new Error(`The notify config must be a positive integer.`);\n        }\n        time = time * 1000;\n        time = time - time % frq;\n        this._notify[time] = true;\n      });\n    }\n    this.timer.add(this.reflow, frq).start();\n    this.reflow(0, true);\n  }\n  destroy() {\n    this.timer.remove(this.reflow);\n    return this;\n  }\n  /**\n   * 更新时钟\n   */\n  reflow(count = 0, force = false) {\n    if (this.isDestroy) {\n      return;\n    }\n    const {\n      status,\n      config,\n      _notify\n    } = this;\n    if (!force && status !== CountdownStatus.ing) {\n      return;\n    }\n    let value = this.left = this.left - this.frequency * count;\n    if (value < 1) {\n      value = 0;\n    }\n    this.i = {\n      value,\n      text: config.formatDate({\n        date: value,\n        formatStr: config.format,\n        timezone: config.timezone\n      })\n    };\n    if (typeof config.prettyText === 'function') {\n      this.i.text = config.prettyText(this.i.text);\n    }\n    this.cdr.detectChanges();\n    if (config.notify === 0 || _notify[value]) {\n      this.ngZone.run(() => {\n        this.callEvent('notify');\n      });\n    }\n    if (value === 0) {\n      this.ngZone.run(() => {\n        this.status = CountdownStatus.done;\n        this.destroy();\n        this.callEvent('done');\n      });\n    }\n  }\n  /**\n   * 获取倒计时剩余帧数\n   */\n  getLeft() {\n    const {\n      config,\n      frequency\n    } = this;\n    let left = config.leftTime * 1000;\n    const end = config.stopTime;\n    if (!left && end) {\n      left = end - new Date().getTime();\n    }\n    this.left = left - left % frequency;\n  }\n  ngOnInit() {\n    this.init();\n    if (!this.config.demand) {\n      this.begin();\n    }\n  }\n  ngOnDestroy() {\n    this.isDestroy = true;\n    this.destroy();\n  }\n  ngOnChanges(changes) {\n    if (!changes.config.firstChange) {\n      this.restart();\n    }\n  }\n  static {\n    this.ɵfac = function CountdownComponent_Factory(t) {\n      return new (t || CountdownComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CountdownComponent,\n      selectors: [[\"countdown\"]],\n      hostVars: 2,\n      hostBindings: function CountdownComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"count-down\", true);\n        }\n      },\n      inputs: {\n        config: \"config\",\n        render: \"render\"\n      },\n      outputs: {\n        event: \"event\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([CountdownTimer]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 1,\n      consts: [[4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n      template: function CountdownComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CountdownComponent_Conditional_0_Template, 1, 4, \"ng-container\")(1, CountdownComponent_Conditional_1_Template, 1, 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx.render ? 0 : 1);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      styles: [\".count-down{font-variant-numeric:tabular-nums}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownComponent, [{\n    type: Component,\n    args: [{\n      selector: 'countdown',\n      template: `\n    @if (render) {\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\" />\n    } @else {\n    <span [innerHTML]=\"i.text\"></span>\n    }\n  `,\n      host: {\n        '[class.count-down]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [NgTemplateOutlet],\n      providers: [CountdownTimer],\n      styles: [\".count-down{font-variant-numeric:tabular-nums}\\n\"]\n    }]\n  }], null, {\n    config: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    render: [{\n      type: Input\n    }],\n    event: [{\n      type: Output\n    }]\n  });\n})();\nclass CountdownModule {\n  static {\n    this.ɵfac = function CountdownModule_Factory(t) {\n      return new (t || CountdownModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CountdownModule,\n      imports: [CountdownComponent],\n      exports: [CountdownComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CountdownComponent],\n      exports: [CountdownComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { COUNTDOWN_CONFIG, CountdownComponent, CountdownModule, CountdownStatus, CountdownTimer, provideCountdown };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAM,MAAM,SAAO;AAAA,EACjB,WAAW;AACb;AACA,SAAS,yDAAyD,IAAI,KAAK;AACzE,MAAI,KAAK,GAAG;AACV,IAAG,mBAAmB,CAAC;AAAA,EACzB;AACF;AACA,SAAS,0CAA0C,IAAI,KAAK;AAC1D,MAAI,KAAK,GAAG;AACV,IAAG,WAAW,GAAG,0DAA0D,GAAG,GAAG,gBAAgB,CAAC;AAAA,EACpG;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,WAAW,oBAAoB,OAAO,MAAM,EAAE,2BAA8B,gBAAgB,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,EAClH;AACF;AACA,SAAS,0CAA0C,IAAI,KAAK;AAC1D,MAAI,KAAK,GAAG;AACV,IAAG,UAAU,GAAG,QAAQ,CAAC;AAAA,EAC3B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,WAAW,aAAa,OAAO,EAAE,MAAS,cAAc;AAAA,EAC7D;AACF;AACA,IAAI;AAAA,CACH,SAAUA,kBAAiB;AAC1B,EAAAA,iBAAgBA,iBAAgB,KAAK,IAAI,CAAC,IAAI;AAC9C,EAAAA,iBAAgBA,iBAAgB,OAAO,IAAI,CAAC,IAAI;AAChD,EAAAA,iBAAgBA,iBAAgB,MAAM,IAAI,CAAC,IAAI;AAC/C,EAAAA,iBAAgBA,iBAAgB,MAAM,IAAI,CAAC,IAAI;AACjD,GAAG,oBAAoB,kBAAkB,CAAC,EAAE;AAC5C,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,cAAc;AACZ,SAAK,SAAS,OAAO,MAAM;AAC3B,SAAK,MAAM,CAAC;AACZ,SAAK,WAAW,CAAC;AACjB,SAAK,WAAW;AAChB,SAAK,MAAM;AAAA,EACb;AAAA,EACA,QAAQ;AACN,QAAI,KAAK,QAAQ,MAAM;AACrB;AAAA,IACF;AACA,SAAK,MAAM;AACX,SAAK,WAAW,CAAC,oBAAI,KAAK;AAC1B,SAAK,OAAO,kBAAkB,MAAM;AAClC,WAAK,QAAQ;AAAA,IACf,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,WAAO,KAAK,SAAS,QAAQ;AAC3B,WAAK,SAAS,MAAM,EAAE;AAAA,IACxB;AACA,QAAI,OAAO,CAAC,oBAAI,KAAK,IAAI,KAAK;AAC9B,UAAM,QAAQ,IAAI,KAAK,MAAM,OAAO,GAAG;AACvC,WAAO,MAAM,OAAO;AACpB,SAAK,YAAY,MAAM;AACvB,aAAS,IAAI,GAAG,MAAM,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,GAAG;AACtD,UAAI,YAAY,KAAK,IAAI,IAAI,CAAC;AAE9B,UAAI,MAAM,WAAW;AACnB,aAAK,IAAI,CAAC,EAAE,KAAK;AAAA,MAEnB,OAAO;AAEL,qBAAa,IAAI,QAAQ;AACzB,cAAM,OAAO,KAAK,MAAM,YAAY,EAAE;AACtC,YAAI,OAAO,GAAG;AACZ,eAAK,IAAI,CAAC,EAAE,IAAI;AAAA,QAClB;AAEA,aAAK,IAAI,IAAI,CAAC,IAAI,YAAY,KAAK;AAAA,MACrC;AAAA,IACF;AACA,QAAI,CAAC,KAAK,KAAK;AACb;AAAA,IACF;AACA,eAAW,MAAM,KAAK,QAAQ,GAAG,IAAI;AAAA,EACvC;AAAA,EACA,IAAI,IAAI,WAAW;AACjB,SAAK,SAAS,KAAK,MAAM;AACvB,WAAK,IAAI,KAAK,EAAE;AAChB,WAAK,IAAI,KAAK,cAAc,MAAO,IAAI,CAAC;AACxC,WAAK,MAAM;AAAA,IACb,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,OAAO,IAAI;AACT,SAAK,SAAS,KAAK,MAAM;AACvB,YAAM,IAAI,KAAK,IAAI,QAAQ,EAAE;AAC7B,UAAI,MAAM,IAAI;AACZ,aAAK,IAAI,OAAO,GAAG,CAAC;AAAA,MACtB;AACA,WAAK,MAAM,KAAK,IAAI,SAAS;AAAA,IAC/B,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,uBAAuB,GAAG;AAC7C,aAAO,KAAK,KAAK,iBAAgB;AAAA,IACnC;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,QAA0B,mBAAmB;AAAA,MAChD,OAAO;AAAA,MACP,SAAS,gBAAe;AAAA,IAC1B,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,mBAAmB,IAAI,eAAe,kBAAkB;AAC9D,SAAS,iBAAiB,QAAQ;AAChC,SAAO,yBAAyB,CAAC;AAAA,IAC/B,SAAS;AAAA,IACT,UAAU;AAAA,EACZ,CAAC,CAAC;AACJ;AACA,IAAM,qBAAN,MAAM,oBAAmB;AAAA,EACvB,cAAc;AACZ,SAAK,SAAS,OAAO,SAAS;AAC9B,SAAK,QAAQ,OAAO,cAAc;AAClC,SAAK,MAAM,OAAO,iBAAiB;AACnC,SAAK,SAAS,OAAO,MAAM;AAC3B,SAAK,SAAS,OAAO,kBAAkB;AAAA,MACrC,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,YAAY;AACjB,SAAK,UAAU,CAAC;AAChB,SAAK,SAAS,gBAAgB;AAC9B,SAAK,YAAY;AACjB,SAAK,IAAI,CAAC;AACV,SAAK,OAAO;AACZ,SAAK,QAAQ,IAAI,aAAa;AAAA,EAChC;AAAA,EACA,IAAI,OAAO,GAAG;AACZ,QAAI,EAAE,UAAU,QAAQ,CAAC,MAAM,QAAQ,EAAE,MAAM,KAAK,EAAE,SAAS,GAAG;AAChE,QAAE,SAAS,CAAC,EAAE,MAAM;AAAA,IACtB;AACA,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ;AACN,SAAK,SAAS,gBAAgB;AAC9B,SAAK,UAAU,OAAO;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU;AACR,QAAI,KAAK,WAAW,gBAAgB,MAAM;AACxC,WAAK,QAAQ;AAAA,IACf;AACA,SAAK,KAAK;AACV,SAAK,UAAU,SAAS;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO;AACL,QAAI,KAAK,WAAW,gBAAgB,MAAM;AACxC;AAAA,IACF;AACA,SAAK,SAAS,gBAAgB;AAC9B,SAAK,QAAQ;AACb,SAAK,UAAU,MAAM;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ;AACN,QAAI,KAAK,WAAW,gBAAgB,QAAQ,KAAK,WAAW,gBAAgB,OAAO;AACjF;AAAA,IACF;AACA,SAAK,SAAS,gBAAgB;AAC9B,SAAK,UAAU,OAAO;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS;AACP,QAAI,KAAK,WAAW,gBAAgB,QAAQ,KAAK,WAAW,gBAAgB,OAAO;AACjF;AAAA,IACF;AACA,SAAK,SAAS,gBAAgB;AAC9B,SAAK,UAAU,QAAQ;AAAA,EACzB;AAAA,EACA,UAAU,QAAQ;AAChB,SAAK,MAAM,KAAK;AAAA,MACd;AAAA,MACA,MAAM,KAAK;AAAA,MACX,QAAQ,KAAK;AAAA,MACb,MAAM,KAAK,EAAE;AAAA,IACf,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,UAAM,SAAS,KAAK,SAAS;AAAA,MAC3B,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,CAAC;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,MACF,MAAM;AACJ,eAAO,WAAW,IAAI,KAAK,IAAI,GAAG,WAAW,KAAK,QAAQ,YAAY,OAAO;AAAA,MAC/E;AAAA,OACG,KAAK,SACL,KAAK;AAEV,UAAM,MAAM,KAAK,YAAY,CAAC,OAAO,OAAO,QAAQ,GAAG,IAAI,MAAM;AACjE,SAAK,SAAS,OAAO,SAAS,gBAAgB,QAAQ,gBAAgB;AACtE,SAAK,QAAQ;AAEb,UAAM,UAAU,KAAK;AACrB,SAAK,SAAS,CAAC,QAAQ,GAAG,QAAQ,UAAU,QAAQ,MAAM,MAAM,CAAC,OAAO,KAAK,CAAC;AAC9E,QAAI,MAAM,QAAQ,OAAO,MAAM,GAAG;AAChC,aAAO,OAAO,QAAQ,UAAQ;AAC5B,YAAI,OAAO,GAAG;AACZ,gBAAM,IAAI,MAAM,+CAA+C;AAAA,QACjE;AACA,eAAO,OAAO;AACd,eAAO,OAAO,OAAO;AACrB,aAAK,QAAQ,IAAI,IAAI;AAAA,MACvB,CAAC;AAAA,IACH;AACA,SAAK,MAAM,IAAI,KAAK,QAAQ,GAAG,EAAE,MAAM;AACvC,SAAK,OAAO,GAAG,IAAI;AAAA,EACrB;AAAA,EACA,UAAU;AACR,SAAK,MAAM,OAAO,KAAK,MAAM;AAC7B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,QAAQ,GAAG,QAAQ,OAAO;AAC/B,QAAI,KAAK,WAAW;AAClB;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,CAAC,SAAS,WAAW,gBAAgB,KAAK;AAC5C;AAAA,IACF;AACA,QAAI,QAAQ,KAAK,OAAO,KAAK,OAAO,KAAK,YAAY;AACrD,QAAI,QAAQ,GAAG;AACb,cAAQ;AAAA,IACV;AACA,SAAK,IAAI;AAAA,MACP;AAAA,MACA,MAAM,OAAO,WAAW;AAAA,QACtB,MAAM;AAAA,QACN,WAAW,OAAO;AAAA,QAClB,UAAU,OAAO;AAAA,MACnB,CAAC;AAAA,IACH;AACA,QAAI,OAAO,OAAO,eAAe,YAAY;AAC3C,WAAK,EAAE,OAAO,OAAO,WAAW,KAAK,EAAE,IAAI;AAAA,IAC7C;AACA,SAAK,IAAI,cAAc;AACvB,QAAI,OAAO,WAAW,KAAK,QAAQ,KAAK,GAAG;AACzC,WAAK,OAAO,IAAI,MAAM;AACpB,aAAK,UAAU,QAAQ;AAAA,MACzB,CAAC;AAAA,IACH;AACA,QAAI,UAAU,GAAG;AACf,WAAK,OAAO,IAAI,MAAM;AACpB,aAAK,SAAS,gBAAgB;AAC9B,aAAK,QAAQ;AACb,aAAK,UAAU,MAAM;AAAA,MACvB,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU;AACR,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,OAAO,OAAO,WAAW;AAC7B,UAAM,MAAM,OAAO;AACnB,QAAI,CAAC,QAAQ,KAAK;AAChB,aAAO,OAAM,oBAAI,KAAK,GAAE,QAAQ;AAAA,IAClC;AACA,SAAK,OAAO,OAAO,OAAO;AAAA,EAC5B;AAAA,EACA,WAAW;AACT,SAAK,KAAK;AACV,QAAI,CAAC,KAAK,OAAO,QAAQ;AACvB,WAAK,MAAM;AAAA,IACb;AAAA,EACF;AAAA,EACA,cAAc;AACZ,SAAK,YAAY;AACjB,SAAK,QAAQ;AAAA,EACf;AAAA,EACA,YAAY,SAAS;AACnB,QAAI,CAAC,QAAQ,OAAO,aAAa;AAC/B,WAAK,QAAQ;AAAA,IACf;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,2BAA2B,GAAG;AACjD,aAAO,KAAK,KAAK,qBAAoB;AAAA,IACvC;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,OAAyB,kBAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,WAAW,CAAC;AAAA,MACzB,UAAU;AAAA,MACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,YAAI,KAAK,GAAG;AACV,UAAG,YAAY,cAAc,IAAI;AAAA,QACnC;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACP,OAAO;AAAA,MACT;AAAA,MACA,YAAY;AAAA,MACZ,UAAU,CAAI,mBAAmB,CAAC,cAAc,CAAC,GAAM,sBAAyB,mBAAmB;AAAA,MACnG,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,CAAC,CAAC,GAAG,oBAAoB,yBAAyB,GAAG,CAAC,GAAG,WAAW,CAAC;AAAA,MAC7E,UAAU,SAAS,4BAA4B,IAAI,KAAK;AACtD,YAAI,KAAK,GAAG;AACV,UAAG,WAAW,GAAG,2CAA2C,GAAG,GAAG,cAAc,EAAE,GAAG,2CAA2C,GAAG,CAAC;AAAA,QACtI;AACA,YAAI,KAAK,GAAG;AACV,UAAG,cAAc,GAAG,IAAI,SAAS,IAAI,CAAC;AAAA,QACxC;AAAA,MACF;AAAA,MACA,cAAc,CAAC,gBAAgB;AAAA,MAC/B,QAAQ,CAAC,kDAAkD;AAAA,MAC3D,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOV,MAAM;AAAA,QACJ,sBAAsB;AAAA,MACxB;AAAA,MACA,eAAe,oBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,SAAS,CAAC,gBAAgB;AAAA,MAC1B,WAAW,CAAC,cAAc;AAAA,MAC1B,QAAQ,CAAC,kDAAkD;AAAA,IAC7D,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,UAAU;AAAA,MACZ,CAAC;AAAA,IACH,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,kBAAN,MAAM,iBAAgB;AAAA,EACpB,OAAO;AACL,SAAK,OAAO,SAAS,wBAAwB,GAAG;AAC9C,aAAO,KAAK,KAAK,kBAAiB;AAAA,IACpC;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,OAAyB,iBAAiB;AAAA,MAC7C,MAAM;AAAA,MACN,SAAS,CAAC,kBAAkB;AAAA,MAC5B,SAAS,CAAC,kBAAkB;AAAA,IAC9B,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,SAAK,OAAyB,iBAAiB,CAAC,CAAC;AAAA,EACnD;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,iBAAiB,CAAC;AAAA,IACxF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,kBAAkB;AAAA,MAC5B,SAAS,CAAC,kBAAkB;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": ["CountdownStatus"]
}
